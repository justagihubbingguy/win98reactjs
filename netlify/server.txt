import socket
import threading

def handle_client(client_socket):
    while True:
        try:
            # Receive message from the client
            message = client_socket.recv(1024).decode()
            if message.lower() == 'exit':
                print("Client has disconnected.")
                break
            print(f"Client: {message}")
            # Respond to the client
            response = input("Server: ")
            client_socket.send(response.encode())
        except:
            print("Error in communication.")
            break
    client_socket.close()

def start_server():
    # Create a TCP/IP socket
    server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

    # Bind the socket to an address and port
    server_socket.bind(('localhost', 12345))

    # Enable the server to listen for incoming connections
    server_socket.listen(1)
    print("Server is listening on port 12345...")

    # Accept a client connection
    client_socket, client_address = server_socket.accept()
    print(f"Connection established with {client_address}")

    # Start a new thread to handle client communication
    client_thread = threading.Thread(target=handle_client, args=(client_socket,))
    client_thread.start()

if __name__ == "__main__":
    start_server()
